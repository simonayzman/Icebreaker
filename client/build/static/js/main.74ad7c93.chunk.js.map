{"version":3,"sources":["assets sync /^/.//.*/.png$","assets/coding.png","assets/family.png","assets/food.png","assets/iceberg1.png","assets/iceberg2.png","assets/music.png","assets/music1.png","assets/politics.png","assets/politics2.png","lib/colors.js","containers/HomeScreen.js","lib/config.js","containers/RoomIntroScreen.js","lib/questions.js","containers/QuestionRankerScreen.js","App.js","serviceWorker.js","index.js","assets/iceberg3.png"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","app","appInverse","logo","tagline","subtitle","label","superlike","like","dislike","indifferent","HomeScreenContainer","styled","div","LogoContainer","Logo","LogoImage","img","LogoText","colors","Tagline","ButtonsContainer","ButtonContainer","ButtonSubtitle","HomeScreen","this","props","roomNameHint","onStartCreateRoom","onStartJoinRoom","onClickLogo","joinRoomButtonText","length","src","logoAsset","resizeMode","onClick","Button","block","variant","size","Component","CONFIG","window","config","token","api","port","API","StyledForm","Form","FieldContainer","FieldLabel","StyledField","Field","StyledErrorMessage","SubmitButton","RoomIntroScreen","generateRoomCode","result","characters","charactersLength","i","charAt","Math","floor","random","onSubmitRoomDetails","values","formik","a","roomSelection","onJoinRoom","roomCode","roomName","userName","userDescription","console","log","createUrl","encodeURI","fetch","response","json","responseJson","error","setFieldError","checkUrl","meta","state","generatedRoomCode","userNameHint","roomCodeHint","roomNameInput","htmlFor","name","type","placeholder","render","msg","initialValues","validationSchema","Yup","min","max","required","onSubmit","setFieldValue","autoCorrect","autoCapitalize","maxLength","onChange","event","target","value","toUpperCase","disabled","component","rows","QUESTIONS","q1","questionId","prompt","topics","image","q2","q3","q4","q5","ORDERED_QUESTIONS","QuestionRankerScreenContainer","CardBody","CardContainer","center","visible","css","lastRanking","CardText","CardImage","ButtonsRowContainer","QuestionRankerScreen","onRank","ranking","onRankAll","inProgressQuestionRankings","cardIndex","currentQuestionId","newCardIndex","updatedInProgressQuestionRankings","setState","questionRankings","renderCard","index","currentQuestion","onSwipedLeft","onSwipedRight","onSwipedUp","onSwipedDown","require","renderButtons","onEnterRoom","color","style","transform","cardBody","AppContainer","Header","header","navigating","navigatedBack","socket","io","PAGES","keymirror","Home","RoomIntro","QuestionRanker","Room","MatchedUsers","BackButtonContainer","App","hydrateFromLocalStorage","userId","localStorage","getItem","userQuestionRankings","JSON","parse","modifiedId","uuid","replace","setItem","saveUserRoom","saveUserQuestionRankings","stringify","onDevReset","devResetCount","newDevResetCount","removeItem","location","reload","navigate","room","user","emit","onBack","page","onRankAllQuestions","goingBack","setTimeout","on","data","backButton","className","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74ad7c93.chunk.js","sourcesContent":["var map = {\n\t\"./coding.png\": 328,\n\t\"./family.png\": 329,\n\t\"./food.png\": 330,\n\t\"./iceberg1.png\": 331,\n\t\"./iceberg2.png\": 332,\n\t\"./iceberg3.png\": 77,\n\t\"./music.png\": 333,\n\t\"./music1.png\": 334,\n\t\"./politics.png\": 335,\n\t\"./politics2.png\": 336\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 327;","module.exports = __webpack_public_path__ + \"static/media/coding.e5e233cc.png\";","module.exports = __webpack_public_path__ + \"static/media/family.411f2f65.png\";","module.exports = __webpack_public_path__ + \"static/media/food.318be3a0.png\";","module.exports = __webpack_public_path__ + \"static/media/iceberg1.e59d76d5.png\";","module.exports = __webpack_public_path__ + \"static/media/iceberg2.1e748262.png\";","module.exports = __webpack_public_path__ + \"static/media/music.8661492c.png\";","module.exports = __webpack_public_path__ + \"static/media/music1.9dc45298.png\";","module.exports = __webpack_public_path__ + \"static/media/politics.f7f6763b.png\";","module.exports = __webpack_public_path__ + \"static/media/politics2.7dc24b21.png\";","export default {\n  app: '#282c34',\n  appInverse: 'white',\n  logo: 'orange',\n  tagline: '#007bff',\n  subtitle: 'rgb(183, 194, 207)',\n  label: '#007bff',\n\n  superlike: 'blue',\n  like: 'green',\n  dislike: 'red',\n  indifferent: 'gray',\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\n\nimport logoAsset from '../assets/iceberg3.png';\nimport colors from '../lib/colors';\n\nconst HomeScreenContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  width: 100%;\n`;\n\nconst LogoContainer = styled.div`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nconst LogoImage = styled.img`\n  height: auto;\n  width: 100%;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst LogoText = styled.div`\n  position: absolute;\n  top: 30%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-family: AppleSDGothicNeo-Bold;\n  font-size: 28px;\n  text-align: center;\n  color: ${colors.logo};\n  text-shadow: 2px 2px 4px #000000;\n`;\n\nconst Tagline = styled.div`\n  color: ${colors.tagline};\n  font-family: AppleSDGothicNeo-Regular;\n  font-size: 16px;\n  text-align: center;\n  line-height: 1.25;\n`;\n\nconst ButtonsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: space-around;\n  padding: 20px 0;\n  margin-bottom: 30px;\n`;\n\nconst ButtonContainer = styled.div`\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst ButtonSubtitle = styled.div`\n  color: ${colors.subtitle};\n  font-family: AppleSDGothicNeo-Light;\n  font-size: 16px;\n`;\n\nexport default class HomeScreen extends Component {\n  render() {\n    const { roomNameHint, onStartCreateRoom, onStartJoinRoom, onClickLogo } = this.props;\n    const joinRoomButtonText =\n      roomNameHint != null && roomNameHint.length > 0\n        ? `Join Room (${roomNameHint}?)`\n        : 'Join Room';\n    return (\n      <HomeScreenContainer>\n        <LogoContainer>\n          <Logo>\n            <LogoImage src={logoAsset} resizeMode=\"contain\" />\n            <LogoText onClick={onClickLogo}>{'Icebreaker'}</LogoText>\n          </Logo>\n          <Tagline>{'The easy way to break the ice'}</Tagline>\n          <Tagline>{'and make better connections'}</Tagline>\n        </LogoContainer>\n        <ButtonsContainer>\n          <ButtonContainer>\n            <Button block variant=\"primary\" size=\"lg\" onClick={onStartCreateRoom}>\n              {'Create Room'}\n            </Button>\n            <ButtonSubtitle>{\"Let's get this party started!\"}</ButtonSubtitle>\n          </ButtonContainer>\n          <ButtonContainer>\n            <Button block variant=\"primary\" size=\"lg\" onClick={onStartJoinRoom}>\n              {joinRoomButtonText}\n            </Button>\n            <ButtonSubtitle>{'Make your entrance and meet some people!'}</ButtonSubtitle>\n          </ButtonContainer>\n        </ButtonsContainer>\n      </HomeScreenContainer>\n    );\n  }\n}\n","export const CONFIG = window.config || {\n  token: '((( DEFAULT DEV ENV )))',\n  api: 'http://localhost',\n  port: 8000,\n};\nexport const API = `${CONFIG.api}${CONFIG.port ? `:${CONFIG.port}` : ''}`;\n","import React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\n\nimport colors from '../lib/colors';\nimport { API } from '../lib/config';\n\nconst StyledForm = styled(Form)`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FieldContainer = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst FieldLabel = styled.div`\n  font-size: 20px;\n  color: ${colors.label};\n  text-align: left;\n`;\n\nconst StyledField = styled(Field)`\n  width: 100%;\n  font-size: 20px;\n  padding: 5px 10px;\n\n  :disabled {\n    color: #aaa;\n  }\n`;\n\nconst StyledErrorMessage = styled.div`\n  color: red;\n  text-align: left;\n  font-size: 20px;\n`;\n\nconst SubmitButton = styled(Button)`\n  margin-top: 20px;\n`;\n\nexport default class RoomIntroScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      generatedRoomCode: props.roomSelection === 'create' ? this.generateRoomCode() : '',\n    };\n  }\n\n  generateRoomCode = (length = 6) => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  onSubmitRoomDetails = async (values, formik) => {\n    const { roomSelection, onJoinRoom } = this.props;\n    const { roomCode, roomName, userName, userDescription } = values;\n\n    if (roomSelection === 'create') {\n      console.log(`Attempting to create room with code: ${roomCode}`);\n      const createUrl = encodeURI(`${API}/createRoom?roomCode=${roomCode}&roomName=${roomName}`);\n      const response = await fetch(createUrl);\n      const responseJson = await response.json();\n      const { error } = responseJson;\n      if (error === true) {\n        formik.setFieldError('roomCode', 'Room already exists! Refresh page.');\n      } else {\n        onJoinRoom({ roomCode, roomName }, { userName, userDescription });\n      }\n    } else if (roomSelection === 'join') {\n      console.log(`Attempting to join room with code: ${roomCode}`);\n      const checkUrl = encodeURI(`${API}/checkRoom?roomCode=${roomCode}`);\n      const response = await fetch(checkUrl);\n      const responseJson = await response.json();\n      const { error, meta } = responseJson;\n      if (error === true) {\n        formik.setFieldError('roomCode', 'Room code does not exist!');\n      } else {\n        const { roomName } = meta;\n        onJoinRoom({ roomCode, roomName }, { userName, userDescription });\n      }\n    }\n  };\n\n  render() {\n    const { userNameHint, roomCodeHint, roomSelection } = this.props;\n    const { generatedRoomCode } = this.state;\n\n    let roomNameInput = null;\n    if (roomSelection === 'create') {\n      roomNameInput = (\n        <FieldContainer>\n          <FieldLabel htmlFor=\"roomName\">{'Room Name'}</FieldLabel>\n          <StyledField name=\"roomName\" type=\"text\" placeholder=\"(optional)\" />\n          <ErrorMessage\n            name=\"roomName\"\n            render={msg => <StyledErrorMessage>{msg}</StyledErrorMessage>}\n          />\n        </FieldContainer>\n      );\n    }\n\n    return (\n      <Formik\n        initialValues={{\n          roomCode:\n            roomSelection === 'create'\n              ? generatedRoomCode\n              : roomCodeHint == null\n              ? ''\n              : roomCodeHint,\n          roomName: '',\n          userName: userNameHint == null ? '' : userNameHint,\n          userDescription: '',\n        }}\n        validationSchema={Yup.object({\n          roomCode: Yup.string()\n            .min(6, 'Must be 6 characters')\n            .max(6, 'Must be 6 characters')\n            .required('*Required'),\n          userName: Yup.string().required('*Required'),\n          userDescription: Yup.string().required('*Required'),\n        })}\n        onSubmit={this.onSubmitRoomDetails}\n      >\n        {({ setFieldValue }) => (\n          <StyledForm>\n            <FieldContainer>\n              <FieldLabel htmlFor=\"roomCode\">{`Room Code${\n                roomSelection === 'create' ? ' (autogenerated)' : ''\n              }`}</FieldLabel>\n              <StyledField\n                name=\"roomCode\"\n                type=\"text\"\n                autoCorrect=\"off\"\n                autoCapitalize=\"characters\"\n                maxLength={6}\n                placeholder=\"Enter 6-letter event code\"\n                onChange={event => setFieldValue('roomCode', event.target.value.toUpperCase())}\n                disabled={roomSelection === 'create'}\n              />\n              <ErrorMessage\n                name=\"roomCode\"\n                render={msg => <StyledErrorMessage>{msg}</StyledErrorMessage>}\n              />\n            </FieldContainer>\n            {roomNameInput}\n            <FieldContainer>\n              <FieldLabel htmlFor=\"userName\">Your Name</FieldLabel>\n              <StyledField name=\"userName\" autoCorrect=\"off\" />\n              <ErrorMessage\n                name=\"userName\"\n                render={msg => <StyledErrorMessage>{msg}</StyledErrorMessage>}\n              />\n            </FieldContainer>\n            <FieldContainer>\n              <FieldLabel htmlFor=\"userDescription\">What do you look like?</FieldLabel>\n              <StyledField\n                name=\"userDescription\"\n                component=\"textarea\"\n                autoCorrect=\"off\"\n                rows={3}\n                placeholder={'e.g., Blonde. Wearing red fedora. Sizeable front teeth.'}\n              />\n              <ErrorMessage\n                name=\"userDescription\"\n                render={msg => <StyledErrorMessage>{msg}</StyledErrorMessage>}\n              />\n            </FieldContainer>\n            <SubmitButton variant=\"primary\" size=\"lg\" type=\"submit\" block>\n              {\"Let's do this!\"}\n            </SubmitButton>\n          </StyledForm>\n        )}\n      </Formik>\n    );\n  }\n}\n","const QUESTIONS = {\n  q1: {\n    questionId: 'q1',\n    prompt: 'Do you think that people should have the freedom to blah blah blah?  1',\n    topics: ['testTopic1', 'testTopic2'],\n    image: 'politics',\n  },\n  q2: {\n    questionId: 'q2',\n    prompt: 'Do you think that people should have the freedom to blah blah blah?  2',\n    topics: ['testTopic2'],\n    image: 'music',\n  },\n  q3: {\n    questionId: 'q3',\n    prompt: 'Do you think that people should have the freedom to blah blah blah?  3',\n    topics: ['testTopic4', 'testTopic5'],\n    image: 'family',\n  },\n  q4: {\n    questionId: 'q4',\n    prompt: 'Do you think that people should have the freedom to blah blah blah?  4',\n    topics: ['testTopic4'],\n    image: 'food',\n  },\n  q5: {\n    questionId: 'q5',\n    prompt: 'Do you think that people should have the freedom to blah blah blah?  5',\n    topics: ['testTopic5'],\n    image: 'coding',\n  },\n};\n\nexport const ORDERED_QUESTIONS = Object.keys(QUESTIONS);\nexport default QUESTIONS;\n","import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Swipeable } from 'react-swipeable';\nimport { Button } from 'react-bootstrap';\nimport { GoThumbsup, GoThumbsdown } from 'react-icons/go';\nimport { GiStarFormation, GiShrug } from 'react-icons/gi';\n\nimport QUESTIONS, { ORDERED_QUESTIONS } from '../lib/questions';\nimport colors from '../lib/colors';\n\nconst QuestionRankerScreenContainer = styled.div`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst CardBody = styled.div`\n  position: relative;\n  flex: 1;\n  width: 100%;\n  display: flex;\n`;\n\nconst CardContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 10px;\n  background-color: white;\n  padding: 20px;\n  max-height: 60vh;\n  margin-bottom: 30px;\n  ${({ center }) => (center === true ? 'justify-content: center;' : '')}\n  ${({ visible }) =>\n    visible === true\n      ? `\n          transition: opacity 500ms;\n          opacity: 1;\n          transform: translateX(0) translateY(0);\n        `\n      : css`\n          transition: opacity 500ms, transform 500ms;\n          opacity: 0;\n          ${props => {\n            const { lastRanking } = props;\n            switch (lastRanking) {\n              case 'like': {\n                return 'transform: translateX(100px);';\n              }\n              case 'dislike': {\n                return 'transform: translateX(-100px);';\n              }\n              case 'superlike': {\n                return 'transform: translateY(-100px);';\n              }\n              case 'indifferent': {\n                return 'transform: translateY(100px);';\n              }\n              default: {\n                return '';\n              }\n            }\n          }}\n        `}\n`;\n\nconst CardText = styled.div`\n  text-align: center;\n  font-size: 24px;\n  color: black;\n  line-height: 1.15;\n`;\n\nconst CardImage = styled.img`\n  width: auto;\n  height: 100%;\n  max-height: 50%;\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ButtonsRowContainer = styled.div`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 60px;\n  height: 60px;\n  border-radius: 30px;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default class QuestionRankerScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionRankings: {},\n      inProgressQuestionRankings: {},\n      cardIndex: 0,\n      lastRanking: 'left',\n    };\n  }\n\n  onRank = ranking => {\n    const { onRankAll } = this.props;\n    const { inProgressQuestionRankings, cardIndex } = this.state;\n    const currentQuestionId = ORDERED_QUESTIONS[cardIndex];\n    const newCardIndex = cardIndex + 1;\n    const updatedInProgressQuestionRankings = {\n      ...inProgressQuestionRankings,\n      [currentQuestionId]: ranking,\n    };\n\n    if (newCardIndex === ORDERED_QUESTIONS.length) {\n      // Done!\n      this.setState({\n        questionRankings: updatedInProgressQuestionRankings,\n        inProgressQuestionRankings: {},\n        cardIndex: newCardIndex,\n        lastRanking: ranking,\n      });\n      onRankAll(updatedInProgressQuestionRankings);\n    } else if (newCardIndex < ORDERED_QUESTIONS.length) {\n      // Some more left to go!\n      this.setState({\n        cardIndex: newCardIndex,\n        inProgressQuestionRankings: updatedInProgressQuestionRankings,\n        lastRanking: ranking,\n      });\n    }\n  };\n\n  renderCard = (questionId, index) => {\n    const { cardIndex, lastRanking } = this.state;\n    const currentQuestion = QUESTIONS[questionId];\n    const { prompt, image } = currentQuestion;\n    return (\n      <Swipeable\n        onSwipedLeft={() => this.onRank('dislike')}\n        onSwipedRight={() => this.onRank('like')}\n        onSwipedUp={() => this.onRank('superlike')}\n        onSwipedDown={() => this.onRank('indifferent')}\n      >\n        <CardContainer visible={index === cardIndex} lastRanking={lastRanking}>\n          <CardImage src={require(`../assets/${image}.png`)} />\n          <CardText>{prompt}</CardText>\n        </CardContainer>\n      </Swipeable>\n    );\n  };\n\n  renderButtons = () => {\n    const { onEnterRoom } = this.props;\n    const { cardIndex } = this.state;\n\n    if (cardIndex === ORDERED_QUESTIONS.length) {\n      return (\n        <ButtonsContainer>\n          <ButtonsRowContainer>\n            <Button block variant=\"primary\" size=\"lg\" onClick={onEnterRoom}>\n              {'Enter room!'}\n            </Button>\n          </ButtonsRowContainer>\n        </ButtonsContainer>\n      );\n    }\n\n    return (\n      <ButtonsContainer>\n        <ButtonsRowContainer>\n          <ButtonContainer onClick={() => this.onRank('superlike')}>\n            <GiStarFormation size=\"35px\" color={colors.superlike} />\n          </ButtonContainer>\n        </ButtonsRowContainer>\n        <ButtonsRowContainer>\n          <ButtonContainer onClick={() => this.onRank('dislike')}>\n            <GoThumbsdown\n              size=\"35px\"\n              color={colors.dislike}\n              style={{ transform: 'scale(-1, 1)' }}\n            />\n          </ButtonContainer>\n          <ButtonContainer onClick={() => this.onRank('like')}>\n            <GoThumbsup size=\"35px\" color={colors.like} />\n          </ButtonContainer>\n        </ButtonsRowContainer>\n        <ButtonsRowContainer>\n          <ButtonContainer onClick={() => this.onRank('indifferent')}>\n            <GiShrug size=\"35px\" color={colors.indifferent} />\n          </ButtonContainer>\n        </ButtonsRowContainer>\n      </ButtonsContainer>\n    );\n  };\n\n  render() {\n    const { cardIndex } = this.state;\n\n    let cardBody;\n    if (cardIndex === ORDERED_QUESTIONS.length) {\n      cardBody = (\n        <CardContainer visible center>\n          <CardText center>{\"You're done!\"}</CardText>\n        </CardContainer>\n      );\n    } else {\n      cardBody = ORDERED_QUESTIONS.map(this.renderCard);\n    }\n\n    return (\n      <QuestionRankerScreenContainer>\n        <CardBody>{cardBody}</CardBody>\n        <ButtonsContainer>{this.renderButtons()}</ButtonsContainer>\n      </QuestionRankerScreenContainer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport io from 'socket.io-client';\nimport keymirror from 'keymirror';\nimport uuid from 'uuid/v4';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport HomeScreen from './containers/HomeScreen';\nimport RoomIntroScreen from './containers/RoomIntroScreen';\nimport QuestionRankerScreen from './containers/QuestionRankerScreen';\nimport colors from './lib/colors';\n\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background-color: ${colors.app};\n`;\n\nconst Header = styled.header`\n  position: relative;\n  min-height: 100vh;\n  max-width: 500px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n  padding: 40px 20px 60px 20px;\n  ${({ navigating }) =>\n    navigating\n      ? css`\n          transition: opacity 500ms, transform 500ms;\n          opacity: 0;\n          ${({ navigatedBack }) =>\n            navigatedBack === true\n              ? 'transform: translateX(100px);'\n              : 'transform: translateX(-100px);'}\n        `\n      : `\n        transition: opacity 500ms;\n        opacity: 1;\n        transform: translateX(0);\n      `}\n`;\n\nconst socket = io();\n\nconst PAGES = keymirror({\n  Home: null,\n  RoomIntro: null,\n  QuestionRanker: null,\n  Room: null,\n  MatchedUsers: null,\n});\n\nconst BackButtonContainer = styled.div`\n  position: absolute;\n  left: 20px;\n  bottom: 20px;\n`;\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      page: PAGES.Home,\n      userId: null,\n      userName: null,\n      userQuestionRankings: null,\n      roomCode: null,\n      roomName: null,\n      roomSelection: null,\n      navigating: false,\n      navigatedBack: false,\n      devResetCount: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.hydrateFromLocalStorage();\n    socket.on('connect', () => console.log('Socket connected on the front-end.'));\n    socket.on('join_room_success', data => console.log('Successfully joined room: ', data));\n  }\n\n  hydrateFromLocalStorage = () => {\n    try {\n      const userId = localStorage.getItem('user-id');\n      const userName = localStorage.getItem('user-name');\n      const userQuestionRankings = JSON.parse(localStorage.getItem('user-question-rankings'));\n      const roomCode = localStorage.getItem('room-code');\n      const roomName = localStorage.getItem('room-name');\n      this.setState({ userId, userName, roomCode, roomName, userQuestionRankings });\n      console.log('Hydrating from local storage');\n      console.log(`User ID: ${userId}`);\n      console.log(`User Name: ${userName}`);\n      console.log(`User Question Rankings: `, userQuestionRankings);\n      console.log(`Room Code: ${roomCode}`);\n      console.log(`Room Name: ${roomName}`);\n\n      if (userId === null) {\n        const newId = uuid();\n        const modifiedId = newId.replace(/\\W/g, '');\n        console.log('Setting new user id: ', modifiedId);\n        localStorage.setItem('user-id', modifiedId);\n        this.setState({ userId: modifiedId });\n      }\n    } catch (error) {\n      console.log('Local storage hydration error: ', error);\n    }\n  };\n\n  saveUserRoom = (userName, roomCode, roomName) => {\n    try {\n      localStorage.setItem('user-name', userName);\n      localStorage.setItem('room-code', roomCode);\n      localStorage.setItem('room-name', roomName);\n    } catch (error) {\n      console.log('Local storage saving error: ', error);\n    }\n  };\n\n  saveUserQuestionRankings = questionRankings => {\n    try {\n      localStorage.setItem('user-question-rankings', JSON.stringify(questionRankings));\n    } catch (error) {\n      console.log('Local storage saving error: ', error);\n    }\n  };\n\n  onDevReset = () => {\n    const { devResetCount } = this.state;\n\n    let newDevResetCount = devResetCount + 1;\n    if (devResetCount === 0) {\n      localStorage.removeItem('user-question-rankings');\n      this.setState({ userQuestionRankings: null });\n    } else if (devResetCount === 1) {\n      localStorage.removeItem('user-name');\n      localStorage.removeItem('user-id');\n      localStorage.removeItem('room-code');\n      localStorage.removeItem('room-name');\n      window.location.reload();\n    }\n\n    this.setState({ devResetCount: newDevResetCount });\n  };\n\n  onStartCreateRoom = () => {\n    this.setState({ roomSelection: 'create' });\n    this.navigate(PAGES.RoomIntro);\n  };\n\n  onStartJoinRoom = () => {\n    this.setState({ roomSelection: 'join' });\n    this.navigate(PAGES.RoomIntro);\n  };\n\n  onJoinRoom = (room, user) => {\n    const { userId, userQuestionRankings } = this.state;\n    const { roomCode, roomName } = room;\n    const { userName, userDescription } = user;\n\n    socket.emit('join_room', { roomCode, user: { userId, userName, userDescription } });\n    this.setState({ userName, roomCode, roomName });\n    this.navigate(userQuestionRankings == null ? PAGES.QuestionRanker : PAGES.MatchedUsers);\n    this.saveUserRoom(userName, roomCode, roomName);\n  };\n\n  onBack = () => {\n    const { page } = this.state;\n\n    switch (page) {\n      case PAGES.RoomIntro:\n        this.navigate(PAGES.Home, true);\n        break;\n      case PAGES.QuestionRanker:\n        this.navigate(PAGES.Home, true);\n        break;\n      case PAGES.MatchedUsers:\n        this.navigate(PAGES.Home, true);\n        break;\n      default:\n        break;\n    }\n  };\n\n  onRankAllQuestions = questionRankings => {\n    this.setState({ userQuestionRankings: questionRankings });\n    this.saveUserQuestionRankings(questionRankings);\n  };\n\n  onEnterRoom = () => {\n    this.navigate(PAGES.MatchedUsers);\n  };\n\n  navigate = (page, goingBack = false) => {\n    this.setState({ navigating: true, navigatedBack: goingBack });\n    setTimeout(() => this.setState({ page, navigating: false, navigatedBack: false }), 500);\n  };\n\n  render() {\n    const {\n      page,\n      userId,\n      userName,\n      roomSelection,\n      roomCode,\n      roomName,\n      navigating,\n      navigatedBack,\n    } = this.state;\n\n    const backButton = (\n      <BackButtonContainer onClick={this.onBack}>\n        <IoMdArrowRoundBack size=\"35px\" />\n      </BackButtonContainer>\n    );\n\n    let component;\n    switch (page) {\n      case PAGES.Home:\n        component = (\n          <HomeScreen\n            roomNameHint={roomName}\n            onStartCreateRoom={this.onStartCreateRoom}\n            onStartJoinRoom={this.onStartJoinRoom}\n            onClickLogo={this.onDevReset}\n          />\n        );\n        break;\n      case PAGES.RoomIntro:\n        component = (\n          <RoomIntroScreen\n            userId={userId}\n            userNameHint={userName}\n            roomCodeHint={roomCode}\n            roomSelection={roomSelection}\n            onJoinRoom={this.onJoinRoom}\n          />\n        );\n        break;\n      case PAGES.QuestionRanker:\n        component = (\n          <QuestionRankerScreen\n            onRankAll={this.onRankAllQuestions}\n            onEnterRoom={this.onEnterRoom}\n          />\n        );\n        break;\n      case PAGES.MatchedUsers:\n        component = <h2>{'Hi there!'}</h2>;\n        break;\n      default:\n        component = <h1>{'NO SCREEN'}</h1>;\n    }\n\n    return (\n      <AppContainer className=\"App\">\n        <Header className=\"App-header\" navigating={navigating} navigatedBack={navigatedBack}>\n          {component}\n          {page !== PAGES.Home ? backButton : null}\n        </Header>\n      </AppContainer>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/iceberg3.2a9a0240.png\";"],"sourceRoot":""}